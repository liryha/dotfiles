# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
'.source.python':
    'fluent':
        'prefix': 'fluent'
        'body': 'g.log_fluent("${1:key}", "${2:action_name}", ${3:value},${4: opt_dict=${5:opt_dict},}${6: user_id=${7:self.user.key()}})'

'.source.jinja, .text.html.jinja':
    'Complete Block':
        'prefix': '{%'
        'body': '{%- $0 -%}'
    'Complete Variable':
        'prefix': '{{'
        'body': '{{ $0 }}'
    'Extends':
        'prefix': 'extends'
        'body': '{%- extends ${1:"${2:template}"} -%}'
    'Filter':
        'prefix': 'filter'
        'body': '{%- filter ${1:filter} -%}\n\t$2\n{%- endfilter -%}'
    'For':
        'prefix': 'for'
        'body': '{%- for ${1:item} in ${2:sequence} -%}\n\t$3\n{%- endfor -%}'
    'If':
        'prefix': 'if'
        'body': '{%- if ${1:expr} -%}\n\t$2\n{%- endif -%}'
    'Macro':
        'prefix': 'macro'
        'body': '{%- macro ${1:name}(${2:args}) -%}\n\t$3\n{%- endmacro -%}'
    'Td':
        'prefix': 'td'
        'body': '{%- call td() -%}$1{%- endcall -%}'
    'call':
        'prefix': 'call'
        'body': '{%- call $1 -%}$2{%- endcall -%}'
    'set':
        'prefix': 'set'
        'body': '{%- set $1 = $2 -%}'
    'with':
        'prefix': 'with'
        'body': '{%- with -%}\n\t$1\n{%- endwith -%}'
    'img':
        'prefix': 'img'
        'body': '<img src="{{ g.image_base }}$1"${2: width="\{\{ fit_size($3) \}\}"}${4: height="\{\{ fit_size($5) \}\}"} />'
    'br':
        'prefix': 'br'
        'body': '<br />'
    'ahref':
        'prefix': 'ahref'
        'body': '<a href="$1">$2</a>'
    'emoji':
        'prefix': 'emoji'
        'body': '{{ color(e("$1"),"$2") }}'
    'linkbase':
        'prefix': 'linkbase'
        'body': '<a href="{{ link("$1") }}">$2</a>'
    'space':
        'prefix': 'space'
        'body': '{{ $1|space|safe }}'
    'spanc':
        'prefix': 'spanc'
        'body': '<span style="color:$1">$2</span>'
    'spans':
        'prefix': 'spans'
        'body': '<span style="$1">$2</span>'
    'import':
        'prefix': 'import'
        'body': '{%- from "parts/$1.html" import ${2:link,fit_size} with context -%}'
